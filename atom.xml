<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>皮之鲲</title>
  
  <subtitle>总不能还没努力就向生活妥协</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-15T06:56:02.062Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>皮皮鲲</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>软件测试</title>
    <link href="http://yoursite.com/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</id>
    <published>2020-06-14T06:27:41.000Z</published>
    <updated>2020-06-15T06:56:02.062Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="软件测试——基本知识"><a href="#软件测试——基本知识" class="headerlink" title="软件测试——基本知识"></a>软件测试——基本知识</h1><h2 id="软件测试的定义"><a href="#软件测试的定义" class="headerlink" title="软件测试的定义"></a>软件测试的定义</h2><p>​        <strong>软件测试是人工的或通过使用工具来自动的运行被测软件系统，或静态检查被测系统的过程，其目的在于校验被测系统是否满足需求，或要弄清楚实际的 系统输出与预期系统输出的差异。</strong></p><p><img src="/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/ruanjianceshidingyi.png" alt="软件测试"></p><p>​        从中可以看出<strong>软件测试的目的是确保被测系统满足用户需求。</strong></p><ul><li><p>软件测试以需求为中心。</p></li><li><p>软件测试包括动态测试和静态检查两类方法</p></li><li><p>测试的执行包括人工和自动化两类策略</p><p>动态（手工）测试：</p><ul><li>提供被测对象</li><li>准备相关的预期（文档）</li><li>设计测试用例</li><li>搭建测试环境</li><li>运行测试用例</li><li>检查测试结果</li><li>记录测试的过程</li><li>报告缺陷</li><li>回归测试</li><li>交付的文件：测试用例，驱动/桩模块，缺陷报告</li></ul><p>静态测试：</p><ul><li><p>提供被测对象（源代码）</p></li><li><p>准备相关的预期（文档）</p></li><li><p>阅读代码和文档</p></li><li><p>报告缺陷</p></li><li><p>回归测试</p></li></ul><p>自动化测试：</p><ul><li>提供被测对象</li><li>准备相关的预期（文档）</li><li>设计测试用例（编写测试脚本）</li><li>搭建测试环境（增加了对测试环境的配置）</li><li>运行测试用例</li><li>检查测试结果</li><li>记录测试的过程</li><li>报告缺陷</li><li>回归测试</li><li>交付的文件：测试用例，驱动/桩模块，缺陷报告，测试脚本</li></ul></li></ul><h2 id="软件测试的流程"><a href="#软件测试的流程" class="headerlink" title="软件测试的流程"></a>软件测试的流程</h2><h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><p>​        回答哪些人分别在什么时候使用哪些方法，利用哪些资源，遵循哪些标准，对系统中的哪些对象进行测试，在这个过程中可能存在哪些风险。</p><ul><li><p>输入</p><ul><li><p>需求规格说明</p></li><li><p>项目计划</p></li></ul></li><li><p>输出</p><ul><li>测试计划</li></ul></li></ul><h3 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h3><p>​        根据用户的寻求、系统设计文档和测试计划，设计测试用例和测试过。</p><ul><li><p>输入</p><ul><li><p>需求</p></li><li><p>设计文档</p></li><li><p>测试计划</p></li></ul></li><li><p>输出</p><ul><li>测试用例</li><li>测试过程</li></ul></li></ul><h3 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h3><p>​        回答如何让测试用例跑起来，被测软件中发现了什么问题。根据测试用例设计模块，手工执行，或者根据测试用例编写测试脚本并运动，检查每一个结果，发现缺陷后提交缺陷报告。</p><ul><li><p>输入</p><ul><li><p>需求</p></li><li><p>测试用例</p></li><li><p>测试过程</p></li></ul></li><li><p>输出</p><ul><li>测试驱动模块</li><li>测试桩模块</li><li>测试脚本（可选）</li></ul></li></ul><h3 id="评估"><a href="#评估" class="headerlink" title="评估"></a>评估</h3><p>​    评估测试工作和被测系统，目的是回答测试工作质量怎么样，被测系统质量怎么样。</p><ul><li><p>输入</p><ul><li><p>缺陷报告</p></li><li><p>测试用例</p></li><li><p>测试标准</p></li></ul></li><li><p>输出</p><ul><li>测试评估报告</li></ul></li></ul><h2 id="软件缺陷"><a href="#软件缺陷" class="headerlink" title="软件缺陷"></a>软件缺陷</h2><h3 id="软件缺陷的定义"><a href="#软件缺陷的定义" class="headerlink" title="软件缺陷的定义:"></a>软件缺陷的定义:</h3><p><img src="/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E7%BC%BA%E9%99%B7" alt="1592125966360"></p><p><strong>1.软件测试人员认为软件难以理解、不易使用、运行速度缓慢，或者最终用户认为不好就是缺陷。</strong></p><p><strong>2.软件未达到需求规格说明书中指明的功能，就是缺陷</strong>。</p><ul><li>保证实现有效输入下的基本功能；</li><li>保证达到相关性能指标</li></ul><p><strong>3.软件出现了需求规格说明书中指明不会出现的错误，就是缺陷（这可视为对软件系统容错性的要求【容错性主要是依赖于测试人员的经验】）。</strong></p><ul><li>系统能否处理异常情况</li><li>系统能否识别用户输入的无效数据</li><li>系统能否处理用户无效的输入数据</li></ul><p><strong>4.软件功能超出需求规格说明书中指明的范围，就是缺陷</strong></p><ul><li>程序员错误的实现了需求规定的功能</li><li>需求规格说明有遗漏，但是程序员完成了</li><li>人为加入的一些超出需求规格说明书的功能（意外或者病毒）</li></ul><p><strong>5.软件未达到需求规格说明书中虽然没有指出，但是应该达到的目标，就是缺陷</strong></p><ul><li>软件的一些隐含的特性（一些对于异常的处理，或者与用户相关专业有关）</li></ul><h2 id="软件质量"><a href="#软件质量" class="headerlink" title="软件质量"></a>软件质量</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><img src="/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/1592202129652.png" alt="1592202129652"></p><p>质量：反映实体满足明确或隐含需要能力的特性总和</p><p>质量的三要素：</p><ul><li><p>实体</p><ul><li>实体是质量的主体，即测量的主体。-般指产品，也可以是活动、过程、组织、人，或者它们的组合。</li></ul></li><li><p>特性集合</p><ul><li>表示度量，特性必须可以测量，定性或定量方式得到指导性结论。</li></ul></li><li><p>需求</p></li></ul><p><strong>软件质量：反应软件满足明确或隐含能力的特性总和。</strong></p><p>​    客观而言，软件质量是软件具有某种能力的属性，这是前提条件<br>​    主观而言，软件具有的能力对应不同层次的用户需求</p><ul><li>侠义的软件质量：软件的内部质量，即软件无故障。</li><li>广义的软件质量：产品质量、过程质量和客户满意度。</li></ul><p><strong>软件测试不能提高软件质量，提高软件质量必须依靠改进软件开发过程的质量。</strong></p><p>软件质量的特性：</p><ul><li>功能性、可靠性、易用性、效率、可移植、可维护 </li></ul><h2 id="软件测试的分类"><a href="#软件测试的分类" class="headerlink" title="软件测试的分类"></a>软件测试的分类</h2><p>1、<strong>按照测试目标分类</strong>:可以分为功能测试、性能测试、可靠性测试、安全性测试、易用性测试等。</p><ul><li><p>功能测试: 针对软件功能需求进行测试，目的是检查应用程序的行为是否符合预期。</p></li><li><p>性能测试: 用于验证系统是否满足规格说明的性能需求，例如容量和响应时间等。</p><p>……</p></li></ul><p>2、<strong>按照执行方式分类</strong>:可以分为静态测试与动态测试。</p><ul><li>静态测试:不执行被测对象，通过检查、阅读进行分析。</li><li>动态测试:运行被测对象，通过观察运行过程进行验证。</li></ul><p>3、<strong>按照测试方法分类</strong>:可以分为白盒测试、黑盒测试、灰盒测试。</p><ul><li>黑盒测试关注的是与产 品的外部行为相关的缺陷，此时并不考虑产品的内部结构或运行逻辑。</li><li>白盒测试关注的是 与代码内部结构相关的缺陷，因此，需要测试人员掌握一定的编程技术。</li><li>灰盒测试是综合运用黑 盒测试和白盒测试技术的一种混合测试方法。</li></ul><p>4、<strong>按照测试阶段分类</strong>:可以分为单元测试、集成测试、系统测试、验收测试四个测试阶段。（V模型）</p><ul><li>单元测试用于验证一个单元模块(或组件)的功能是否正常，一个单元模块可以包括几行或上百行代码。（主要采用白盒测试）</li><li>集成测试是将不同的单元模块组合在一起，形成更大组件的测试过程。</li><li>系统测试用于检验软件产品是否能与系统的其它部分协调工作，包括硬件、数据库及操作人员等。</li><li>验收测试是软件部署之前的一个测试操作，其测试范围类似于系统测试，通常是由系统提供者和客户来共同完成。以确定系统是否满足验收标准</li></ul><h2 id="软件测试过程模型"><a href="#软件测试过程模型" class="headerlink" title="软件测试过程模型"></a>软件测试过程模型</h2><h3 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h3><p>V模型是最早提出来的测试模型，旨在改进软件的效率和效果。</p><p><img src="/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/1592203424906.png" alt="1592203424906"></p><p>V模型的局限性：没有明确说明早期检测的重要性，不能提现“尽早开展测试的原则”</p><h3 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h3><p><img src="/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/1592203570161.png" alt="1592203570161"></p><p><strong>W模型的价值和意义</strong>：</p><ul><li>注重在软件开发的各个阶段应用静态测试技术，使得在执行开发过程的同时执行测试,实现了真<br>正的开发与测试并行。</li><li>强调尽早展开测试，能够在开发早期发现缺陷,降低缺陷修改成本。</li></ul><p><strong>W模型的局限性:</strong></p><ul><li>将软件开发阶段视为串行活动,无法有效支持迭代及变更调整。</li></ul><h3 id="H模型"><a href="#H模型" class="headerlink" title="H模型"></a>H模型</h3><p><img src="/2020/06/14/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/1592203751602.png" alt="1592203751602"></p><h3 id="模型总结："><a href="#模型总结：" class="headerlink" title="模型总结："></a>模型总结：</h3><p>V模型的含义：强调了测试阶段划分,测试阶段与开发阶段的对应性<br>W模型的含义：强调了早期测试、静态测试的重要性<br>H模型的含义：强调了测试活动是独立的,与其他流程并发进行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/06/04/hello-world/"/>
    <id>http://yoursite.com/2020/06/04/hello-world/</id>
    <published>2020-06-04T07:13:57.580Z</published>
    <updated>2020-06-04T07:13:57.580Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
